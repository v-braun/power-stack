name: deploy infrastructure

# this actions will be triggered via [actionspanel](https://www.actionspanel.app/)
on: repository_dispatch

jobs:

  apply:
    if: github.event.action == 'deploy_infrastructure'
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: generate public key file
        env: 
          RSA_PUB_KEY: ${{ secrets.RSA_PUB_KEY }}      
        run: echo $RSA_PUB_KEY > ./infrastructure/id_rsa.pub

      - name: generate tf backend file
        env: 
          STORAGE_ACC_NAME: ${{ secrets.TF_STATE_STORAGE_ACC_NAME }}
          CONTAINER_NAME: tfstates
          KEY: prod.terraform.tfstate
        run: |
          cat > ./infrastructure/backend.tf <<EOF
          terraform {
            backend "azurerm" {
              storage_account_name  = "$STORAGE_ACC_NAME"
              container_name        = "$CONTAINER_NAME"
              key                   = "$KEY"
            }
          }
          EOF

      - name: 'init terraform'
        uses: hashicorp/terraform-github-actions@master
        env:
          ARM_ACCESS_KEY: ${{ secrets.TF_STATE_ACCESS_KEY }}
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ./infrastructure

      - name: validate infrastructure
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ./infrastructure


  # TODO
  # github actions don't support a manual approval
  # create a plan step later and implement an approval for the apply step
  # when approvals are possible          
      - name: apply infrastructure
        uses: hashicorp/terraform-github-actions@master
        env: 
          TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.TENANT_ID }}
          TF_VAR_username: ${{ secrets.VM_USERNAME }}
          TF_VAR_environment: prod
          TF_VAR_name: ${{ secrets.APP_NAME }}
          TF_VAR_rsync_port: ${{ secrets.RSYNC_PORT }}      
          TF_VAR_pubkey_file: ./id_rsa.pub
          ARM_ACCESS_KEY: ${{ secrets.TF_STATE_ACCESS_KEY }}
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ./infrastructure

