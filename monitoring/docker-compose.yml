version: '3.5'

networks:
  power-stack-net:
    external: true

volumes:
  influxdb_data: 
  grafana_data:
  chronograf_data:
      
services:
  telegraf:
    image: power-stack/monitoring.telegraf
    build:
      context: ./telegraf
    deploy:
      restart_policy: 
        condition: on-failure
        delay: 5s
    networks:
      - power-stack-net
    logging:
      driver: json-file
      options: 
        max-size: 5m
    environment:
      - HOST_PROC=/rootfs/proc
      - HOST_SYS=/rootfs/sys
      - HOST_ETC=/rootfs/etc
      - INFLUXDB_NAME=${INFLUXDB_NAME}
    volumes:
      - "/sys:/rootfs/sys:ro"
      - "/proc:/rootfs/proc:ro"
      - "/etc:/rootfs/etc:ro"        
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    # ports:
    #   - 8125:8125/udp

  influxdb:
    image: power-stack/monitoring.influxdb
    build:
      context: ./influxdb
    deploy:
      restart_policy: 
        condition: on-failure
        delay: 5s
    environment:
      - INFLUXDB_DB=${INFLUXDB_NAME}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USER_NAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_USER_PWD}
      - INFLUXDB_HTTP_LOG_ENABLED=false 
      - NFLUXDB_DATA_QUERY_LOG_ENABLED=false 
      - INFLUXDB_CONTINUOUS_QUERIES_LOG_ENABLED=false
    # ports:
    #   - 8086:8086
    networks:
      - power-stack-net
    volumes:
      - influxdb_data:/var/lib/influxdb

  chronograf:
    image: chronograf:1.8
    deploy:
      restart_policy: 
        condition: on-failure
        delay: 5s
      labels: 
        - "traefik.enable=true"
        - "traefik.http.services.chronograf.loadbalancer.server.port=8888"
        - "traefik.http.routers.chronograf.middlewares=simple_auth" # with basic auth
        - "traefik.http.routers.chronograf.rule=Host(`${CHRONOGRAF_WEB_DOMAIN}`)"
        - "traefik.http.routers.chronograf.entrypoints=https"
        - "traefik.http.routers.chronograf.tls.certresolver=letsencrypt"
        - "traefik.http.routers.chronograf.tls=true"
        - "traefik.http.routers.chronograf.service=chronograf"        
    networks:
      - power-stack-net
    volumes:
      - chronograf_data:/var/lib/chronograf
    entrypoint: 'chronograf --influxdb-url=http://influxdb:8086'

  dozzle:
    image: amir20/dozzle:latest
    deploy:
      restart_policy: 
        condition: on-failure
        delay: 5s
      labels: 
        - "traefik.enable=true"
        - "traefik.http.services.dozzle.loadbalancer.server.port=8080"
        - "traefik.http.routers.dozzle.middlewares=simple_auth" # with basic auth
        - "traefik.http.routers.dozzle.rule=Host(`${DOZZLE_WEB_DOMAIN}`)"
        - "traefik.http.routers.dozzle.entrypoints=https"
        - "traefik.http.routers.dozzle.tls.certresolver=letsencrypt"
        - "traefik.http.routers.dozzle.tls=true"
        - "traefik.http.routers.dozzle.service=dozzle"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - power-stack-net
    logging:
      driver: json-file
      options: 
        max-size: 10m


  grafana:
    image: power-stack/monitoring.grafana
    build:
      context: ./grafana
    deploy:
      restart_policy: 
        condition: on-failure
        delay: 5s
      labels: 
        - "traefik.enable=true"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.routers.grafana.rule=Host(`${GRAFANA_WEB_DOMAIN}`)"
        - "traefik.http.routers.grafana.entrypoints=https"
        - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
        - "traefik.http.routers.grafana.tls=true"
        - "traefik.http.routers.grafana.service=grafana"
      # volumes:
        # - grafana_data:/var/lib/grafana
        # - ./grafana/provisioning/:/etc/grafana/provisioning/
        # - ./grafana/dashboards/:/var/lib/grafana/dashboards/        
    networks:
      - power-stack-net
    logging:
      driver: json-file
      options: 
        max-size: 5m    
    environment:
      - INFLUXDB_NAME=${INFLUXDB_NAME}
      - INFLUXDB_USER_NAME=${INFLUXDB_USER_NAME}
      - INFLUXDB_USER_PWD=${INFLUXDB_USER_PWD}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER_NAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_USER_PWD}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel,grafana-piechart-panel

